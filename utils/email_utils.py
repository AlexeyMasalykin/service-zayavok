from flask_mail import Message
from db.models import Session, Application
import os
import logging

def send_weekly_report(mail, app):
    #with app.app_context():
        #print("üì® –ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–∏—Å—å–º–∞...")
    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫
    db_session = Session()
    count = db_session.query(Application).filter_by(status="–Ω–æ–≤–∞—è").count()
    db_session.close()

    # –°–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π –∏–∑ .env
    recipients = [
        email.strip()
        for email in os.getenv('MAIL_RECIPIENT', '').split(',')
        if email.strip()
    ]

    if not recipients:
        app.logger.warning("‚ùå MAIL_RECIPIENT –Ω–µ —É–∫–∞–∑–∞–Ω ‚Äî –æ—Ç—á—ë—Ç –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–∏—Å—å–º–æ
    msg = Message(
        subject="üìù –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á—ë—Ç –æ –Ω–æ–≤—ã—Ö –∑–∞—è–≤–∫–∞—Ö",
        sender=app.config['MAIL_USERNAME'],
        recipients=recipients,
        body=f"–ù–∞ —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç –≤ —Å–∏—Å—Ç–µ–º–µ {count} –∑–∞—è–≤–æ–∫ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º '–Ω–æ–≤–∞—è'."
    )

    try:
        with app.app_context():
            # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ SMTP —Å–µ—Ä–≤–µ—Ä—É
            with mail.connect() as conn:
                conn.send(msg)
            app.logger.info("üìß –û—Ç—á—ë—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
    except Exception as e:
        app.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞: {e}")
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞: {e}")

def notify_user(mail, app, recipient_email, app_id, description):
    try:
        with app.app_context():
            msg = Message(
                subject="üì® –í–∞—à–∞ –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç–∞",
                sender=app.config['MAIL_USERNAME'],
                recipients=[recipient_email],
                body=(
                    f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!\n\n"
                    f"–í–∞—à–∞ –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∏ –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞ –∫–æ–º–∏—Å—Å–∏–µ–π –Ω–∞ –±–ª–∏–∂–∞–π—à–µ–º –∑–∞—Å–µ–¥–∞–Ω–∏–∏.\n"
                    f"–ù–æ–º–µ—Ä –≤–∞—à–µ–π –∑–∞—è–≤–∫–∏: {app_id}\n\n"
                    f"–û–ø–∏—Å–∞–Ω–∏–µ: {description}\n\n"
                    f"–° —É–≤–∞–∂–µ–Ω–∏–µ–º,\n–°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–∏–µ–º–∞ –∑–∞—è–≤–æ–∫ –ì–ë–ü–û–£ –ù–û –ù–ú–ö."
                )
            )
            
            # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ SMTP —Å–µ—Ä–≤–µ—Ä—É
            with mail.connect() as conn:
                conn.send(msg)
            
            app.logger.info(f"‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {recipient_email}")
            
    except Exception as e:
        app.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: {e}")
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: {e}")
            
def notify_status_change(mail, app, email: str, app_id: int, status: str, note: str, description: str = ""):
    try:
        subject = f"–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏ ‚Ññ{app_id}"
        body = f"""–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!

–í–∞—à–∞ –∑–∞—è–≤–∫–∞ ‚Ññ{app_id} –æ–±–Ω–æ–≤–ª–µ–Ω–∞.

üìù –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: {status}
üìå –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: {note or '‚Äî'}
üìÑ –û–ø–∏—Å–∞–Ω–∏–µ: {description or '‚Äî'}

–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç—Å–ª–µ–¥–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏ –Ω–∞ —Å–∞–π—Ç–µ.
"""
        recipients = [email]

        msg = Message(subject=subject,
                      sender=app.config['MAIL_USERNAME'],
                      recipients=recipients,
                      body=body)

        with app.app_context():
            # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ SMTP —Å–µ—Ä–≤–µ—Ä—É
            with mail.connect() as conn:
                conn.send(msg)
            logging.info(f"üì© –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞—è–≤–∫–µ #{app_id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ {email}")

    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")

