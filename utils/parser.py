from docx import Document
import io
# import fitz  # PDF support removed
import re

def extract_text(file_bytes: bytes, ext: str) -> str:
    text = ""

    if ext == 'docx':
        doc = Document(io.BytesIO(file_bytes))

        # üìÑ –ß–∏—Ç–∞–µ–º –æ–±—ã—á–Ω—ã–µ –∞–±–∑–∞—Ü—ã
        paragraphs = [p.text for p in doc.paragraphs if p.text.strip()]
        text += "\n".join(paragraphs)

        # üìä –ß–∏—Ç–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
        for table in doc.tables:
            for row in table.rows:
                row_text = [cell.text.strip() for cell in row.cells]
                if any(row_text):
                    text += "\n" + " | ".join(row_text)

    # PDF support removed
    # elif ext == 'pdf':
    #     with fitz.open(stream=file_bytes, filetype='pdf') as doc:
    #         for page in doc:
    #             text += page.get_text()

    else:
        raise ValueError("‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞")

    return text

def extract_fields(text):
    def find(label):
        pattern = rf"{re.escape(label)}\s*(.*)"
        match = re.search(pattern, text)
        if match:
            return re.sub(r"^\\(.*?\\):?\\s*", "", match.group(1)).strip()
        return ""
    return {
        "initiator": find("–ò–Ω–∏—Ü–∏–∞—Ç–æ—Ä –∑–∞—è–≤–∫–∏ (–§–ò–û, –¥–æ–ª–∂–Ω–æ—Å—Ç—å):"),
        "description": find("–û–ø–∏—Å–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –∑–∞–∫—É–ø–∫–∏ (–∫—Ä–∞—Ç–∫–æ):"),
        "cost": find("–û—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å:"),
        "phone": find("–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–Ω–∏—Ü–∏–∞—Ç–æ—Ä–∞ –∑–∞—è–≤–∫–∏:"),
        "email": find("–ê–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã:"),
        "department": find("–ö–æ—Ä–ø—É—Å, —Ñ–∏–ª–∏–∞–ª:"),
    }
